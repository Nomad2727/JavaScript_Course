/* 1. Написать функцию, преобразующую число в объект. 
    Передавая на вход число от 0 до 999, надо получить на выходе объект, 
    в котором в соответствующих свойствах описаны единицы, десятки и сотни. 
    Например, для числа 245 надо получить следующий объект: {‘единицы’: 5, ‘десятки’: 4, ‘сотни’: 2}. 
    Если число превышает 999, необходимо выдать соответствующее сообщение с помощью console.log и 
    вернуть пустой объект. */
function func(num) {
    if (num > 999 || num < 0) {
        console.log('Нужно ввести число от 0 до 999')
        return {
            'единицы': 0,
            'десятки': 0,
            'сотни': 0,
        };
    }
    const number = !(typeof num === "string") ? num.toString() : num;
    return {
        'единицы': number[number.length - 1],
        'десятки': number[number.length - 2] ? number[number.length - 2] : '0',
        'сотни': number[number.length - 3] ? numder[number.length - 3] : '0',

    }
}
console.log(func(1270));

/* 2. Продолжить работу с интернет-магазином:
    a. В прошлом домашнем задании вы реализовали корзину на базе массивов. Какими объектами можно заменить их элементы?
    b. Реализуйте такие объекты.
    c. Перенести функционал подсчета корзины на объектно-ориентированную базу. */

const cart = {
    items: [
        {
            name: 'Мухоморы',
            price: 3700,
            count: 12,
        },
        {
            name: 'Белый гриб',
            price: 870,
            count: 27,
        },
        {
            name: 'Опята',
            price: 300,
            count: 19,
        },
    ],
    getTotalPrice() {
        return this.items.reduce((acc, item) => {
            return acc + item.price * item.count;
        }, 0);
    }
}
console.log(cart.getTotalPrice() + ' руб.');